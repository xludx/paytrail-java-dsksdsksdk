/*
 * Payment API
 * Paytrail Payment API 
 *
 * The version of the OpenAPI document: 2.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.suchventure.paytrail.client.api;

import com.suchventure.paytrail.client.ApiException;
import com.suchventure.paytrail.client.model.Error;
import java.time.OffsetDateTime;
import com.suchventure.paytrail.client.model.PaymentReportBySettlementIdRequest;
import com.suchventure.paytrail.client.model.PaymentReportRequest;
import com.suchventure.paytrail.client.model.PaymentReportRequestResponse;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for PaymentReportsApi
 */
@Disabled
public class PaymentReportsApiTest {

    private final PaymentReportsApi api = new PaymentReportsApi();

    /**
     * Request a payment report
     *
     * Request a report of payments to be sent to the given callback url. Callback schema defined in PaymentReportCallbackJSON. 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void requestPaymentReportTest() throws ApiException {
        PaymentReportRequest paymentReportRequest = null;
        Integer checkoutAccount = null;
        String checkoutAlgorithm = null;
        String checkoutMethod = null;
        OffsetDateTime checkoutTimestamp = null;
        String signature = null;
        PaymentReportRequestResponse response = api.requestPaymentReport(paymentReportRequest)
                .checkoutAccount(checkoutAccount)
                .checkoutAlgorithm(checkoutAlgorithm)
                .checkoutMethod(checkoutMethod)
                .checkoutTimestamp(checkoutTimestamp)
                .signature(signature)
                .execute();
        // TODO: test validations
    }

    /**
     * Request a report of payments contained in a given settlement
     *
     * Request a report of payments contained in a given settlement to be sent to the given callback url. Callback schema defined in PaymentReportCallbackJSON. 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void requestPaymentReportBySettlementIdTest() throws ApiException {
        String settlementId = null;
        PaymentReportBySettlementIdRequest paymentReportBySettlementIdRequest = null;
        Integer checkoutAccount = null;
        String checkoutAlgorithm = null;
        String checkoutMethod = null;
        OffsetDateTime checkoutTimestamp = null;
        String signature = null;
        PaymentReportRequestResponse response = api.requestPaymentReportBySettlementId(settlementId, paymentReportBySettlementIdRequest)
                .checkoutAccount(checkoutAccount)
                .checkoutAlgorithm(checkoutAlgorithm)
                .checkoutMethod(checkoutMethod)
                .checkoutTimestamp(checkoutTimestamp)
                .signature(signature)
                .execute();
        // TODO: test validations
    }

}
